{"version":3,"file":"ngx-tiny-date-picker.js","sources":["../../../projects/ngx-date-picker/src/helpers/is-same-date.ts","../../../projects/ngx-date-picker/src/helpers/create-date-range.ts","../../../projects/ngx-date-picker/src/helpers/is-null.ts","../../../projects/ngx-date-picker/src/component/date-picker/ngx-date-picker.component.ts","../../../projects/ngx-date-picker/src/ngx-date-picker.directive.ts","../../../projects/ngx-date-picker/src/ngx-date-picker.module.ts","../../../projects/ngx-date-picker/src/ngx-tiny-date-picker.ts"],"sourcesContent":["import { isSameDay, isSameMonth, isSameYear } from 'date-fns';\r\n\r\nexport const isSameDate = (date: Date, current: Date): boolean => (\r\n  isSameDay(date, current) && isSameMonth(date, current) && isSameYear(date, current)\r\n);\r\n","import { DateRange } from '../models';\r\n\r\nexport const createDateRange = (start: Date, end: Date): DateRange => ({\r\n  start: start ? new Date(start.getTime()) : null,\r\n  end: end ? new Date(end.getTime()) : null,\r\n});\r\n","/**\r\n * Internal library helper that helps to check if value is empty\r\n */\r\nexport const isNull = (value: any) => {\r\n    return (typeof value === 'undefined') || (value === null);\r\n};\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ElementRef,\r\n    forwardRef,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    HostListener,\r\n    Output,\r\n    EventEmitter\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\n\r\nimport {\r\n    startOfMonth,\r\n    endOfMonth,\r\n    addMonths,\r\n    subMonths,\r\n    setYear,\r\n    eachDayOfInterval,\r\n    getDate,\r\n    getMonth,\r\n    getYear,\r\n    isToday,\r\n    isSameMonth,\r\n    format,\r\n    getDay,\r\n    subDays,\r\n    setDay,\r\n    isAfter, isBefore, addDays, setMonth,\r\n} from 'date-fns';\r\n\r\nimport { isSameDate, createDateRange, isNull } from '../../helpers';\r\nimport { DateRange, Day } from '../../models';\r\nimport { DatePickerOptions, AddClass } from '../../ngx-date-picker.options';\r\n\r\n\r\n// instanceID for calculating the auto-incrementing field ID\r\nlet instanceID = 0;\r\n\r\n@Component({\r\n    selector: 'ngx-date-picker',\r\n    templateUrl: 'ngx-date-picker.component.html',\r\n    styleUrls: ['ngx-date-picker.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxDatePickerComponent), multi: true }\r\n    ]\r\n})\r\nexport class NgxDatePickerComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n    @ViewChild('container') calendarContainerElement: ElementRef;\r\n    @ViewChild('calendarYearsContainer') calendarYearsContainer: ElementRef;\r\n\r\n\r\n    @Input() value: Date | DateRange;\r\n    @Input() options: DatePickerOptions;\r\n\r\n    /**\r\n     * Set date picker's visibility state\r\n     */\r\n    @Input() isOpened = true;\r\n\r\n    @Output() valueChange: EventEmitter<Date | DateRange> = new EventEmitter();\r\n\r\n    currentOptions: DatePickerOptions = {\r\n        closeOnClickOutside: false,\r\n        closeOnSelection: true,\r\n        includeDays: 'all',\r\n        includeNextMonthsFirstFullWeek: false,\r\n        minYear: 1900,\r\n        maxYear: 2050,\r\n        displayFormat: 'MMM d, yyyy',\r\n        barTitleFormat: 'MMM yyyy',\r\n        dayNamesFormat: 'EEEEEE',\r\n        rangeSeparator: '-',\r\n        selectRange: false,\r\n        firstCalendarDay: 0,\r\n        barTitleIfEmpty: 'Click to select a date',\r\n        locale: {},\r\n        fieldId: this.defaultFieldId,\r\n        useEmptyBarTitle: true,\r\n        mobileStyle: 'dialog'\r\n    };\r\n\r\n    isInline: boolean;\r\n    displayValue: string;\r\n    viewingDate: Date;\r\n    barTitle: string;\r\n    view: 'days' | 'months' | 'years';\r\n    years: { index: number, year: number; isThisYear: boolean }[];\r\n    months: { month: number; name: string; isSelected: boolean }[];\r\n    dayNames: string[];\r\n    days: Day[];\r\n    fieldId: string;\r\n    disabled: boolean;\r\n\r\n    private _range: DateRange;\r\n\r\n    private onTouchedCallback: () => void = () => { };\r\n    private onChangeCallback: (_: Date | DateRange) => void = (_) => {\r\n        this.valueChange.emit(_);\r\n    }\r\n\r\n    public setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    set range(val: DateRange | undefined) {\r\n        this._range = val;\r\n    }\r\n\r\n    get range(): DateRange | undefined {\r\n        return this._range;\r\n    }\r\n\r\n    get wrapperStyle() {\r\n        switch (this.currentOptions.mobileStyle) {\r\n            case 'dialog':\r\n                return this.isInline === false ? 'form-date' : 'inline-date';\r\n            case 'normal':\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        if (typeof startOfMonth === 'undefined') {\r\n            throw new Error('module date-fns is required by <ngx-date-picker> to function.');\r\n        }\r\n\r\n        this.view = 'days';\r\n        this.range = this.range || {\r\n            start: new Date(),\r\n            end: new Date(),\r\n        };\r\n\r\n        if (this.value && !(this.value instanceof Date)) {\r\n            this.range = this.value;\r\n            this.viewingDate = this.range.start;\r\n        } else if (this.value && this.value instanceof Date) {\r\n            this.viewingDate = this.value;\r\n        } else {\r\n            this.viewingDate = this.range.start;\r\n        }\r\n\r\n        this.updateOptions(this.options);\r\n        this.initDayNames();\r\n        this.initYears();\r\n        this.initMonths();\r\n\r\n        this.init();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('options' in changes) {\r\n            this.updateOptions(changes.options.currentValue);\r\n            this.initDayNames();\r\n            this.init();\r\n            this.initYears();\r\n            this.initMonths();\r\n        }\r\n    }\r\n\r\n    get defaultFieldId(): string {\r\n        // Only evaluate and increment if required\r\n        const value = `ngx-date-picker-${instanceID++}`;\r\n        Object.defineProperty(this, 'defaultFieldId', { value });\r\n\r\n        return value;\r\n    }\r\n\r\n    updateOptions(options: DatePickerOptions): void {\r\n        this.currentOptions = {\r\n            ...this.currentOptions,\r\n            ...options,\r\n        };\r\n    }\r\n\r\n    writeValue(val: DateRange | Date | string | undefined) {\r\n        if (val) {\r\n            if (typeof val === 'string') {\r\n                this.range.start = this.range.end = new Date(val);\r\n            } else if (val instanceof Date) {\r\n                this.range.start = this.range.end = val;\r\n            } else if (val.start) { // Checking if it's instance of DateRange\r\n                this.range = val;\r\n            } else {\r\n                throw Error('Invalid input data type');\r\n            }\r\n\r\n            this.viewingDate = this.range.start || this.viewingDate || new Date();\r\n\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\r\n\r\n    formatDay = (date: Date, isVisible: boolean = true): Day => (\r\n        {\r\n            date,\r\n            day: getDate(date),\r\n            month: getMonth(date),\r\n            year: getYear(date),\r\n            inThisMonth: isSameMonth(date, this.viewingDate),\r\n            isToday: isVisible && isToday(date),\r\n            isSelected: isVisible && this.isDateSelected(date),\r\n            isInRange: isVisible && this.isInRange(date),\r\n            isSelectable: isVisible && this.isDateSelectable(date),\r\n            isStart: isVisible && this.isRangeBoundary(date, 'start'),\r\n            isEnd: isVisible && this.isRangeBoundary(date, 'end'),\r\n            isVisible,\r\n        }\r\n    )\r\n\r\n    getDayClasses(day: Day): AddClass {\r\n        return {\r\n            'is-prev-month': !day.inThisMonth,\r\n            'is-today': day.isToday,\r\n            'is-selected': day.isSelected,\r\n            'is-in-range': day.isInRange,\r\n            'is-disabled': !day.isSelectable,\r\n            'range-start': day.isStart,\r\n            'range-end': day.isEnd,\r\n            'is-visible': day.isVisible,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks if specified date is in range of min and max dates\r\n     */\r\n    private isDateSelectable(date: Date): boolean {\r\n        const minDateSet = !isNull(this.currentOptions.minDate);\r\n        const maxDateSet = !isNull(this.currentOptions.maxDate);\r\n        const timestamp = date.valueOf();\r\n\r\n        // Check if the date range is set and between min and max\r\n        const _isAboveMinDate = minDateSet ? timestamp >= this.currentOptions.minDate.valueOf() : true;\r\n        const _isBelowMaxDate = maxDateSet ? timestamp <= this.currentOptions.maxDate.valueOf() : true;\r\n\r\n        return _isAboveMinDate && _isBelowMaxDate;\r\n    }\r\n\r\n    private isDateSelected(date: Date): boolean {\r\n        return this.range && this.range.start ? isSameDate(date, this.range.start) || isSameDate(date, this.range.end) : false;\r\n    }\r\n\r\n    private isInRange(date: Date): boolean {\r\n        return this.isDateSelected(date) || this.range && this.range.start ? (isAfter(date, this.range.start) && isBefore(date, this.range.end)) : false;\r\n    }\r\n\r\n    public formatDisplay(): string {\r\n        if (!this.range) {\r\n            return '';\r\n        }\r\n\r\n        const formattedStartDate = format(this.range.start, this.currentOptions.displayFormat, this.currentOptions.locale);\r\n\r\n        if (this.currentOptions.selectRange) {\r\n            const formattedEndDate = format(\r\n                this.range.end || this.range.start,\r\n                this.currentOptions.displayFormat,\r\n                this.currentOptions.locale\r\n            );\r\n\r\n            return `${formattedStartDate} ${this.currentOptions.rangeSeparator} ${formattedEndDate}`;\r\n        }\r\n\r\n        return formattedStartDate;\r\n    }\r\n\r\n    private isRangeBoundary(date: Date, boundary: 'start' | 'end'): boolean {\r\n        return this.range ? !this.range[boundary] || isSameDate(date, this.range[boundary]) : false;\r\n    }\r\n\r\n    public getValueToEmit(range: DateRange): DateRange | Date {\r\n\r\n        if (!range || !range.start) {\r\n            return null;\r\n        }\r\n\r\n        if (!this.currentOptions.selectRange) {\r\n            return new Date(range.start.getTime());\r\n        }\r\n\r\n        if (range.end) {\r\n            return createDateRange(range.start, range.end);\r\n        }\r\n\r\n        return createDateRange(range.start, range.start);\r\n    }\r\n\r\n    // ############### Day #################\r\n\r\n    init(): void {\r\n        if (!this.viewingDate) {\r\n            return;\r\n        }\r\n\r\n        const start = startOfMonth(this.viewingDate);\r\n        const end = endOfMonth(this.viewingDate);\r\n\r\n        this.days = eachDayOfInterval({ start, end }).map((date) => this.formatDay(date));\r\n\r\n        const firstMonthDay = getDay(start) - this.currentOptions.firstCalendarDay;\r\n        const prevDays = firstMonthDay < 0 ? 7 - this.currentOptions.firstCalendarDay : firstMonthDay;\r\n        let nextDays = (this.currentOptions.firstCalendarDay === 1 ? 7 : 6) - getDay(end);\r\n\r\n        const showPrevMonthDays = this.currentOptions.includeDays === 'all' || this.currentOptions.includeDays === 'previous-month';\r\n        const showNextMonthDays = this.currentOptions.includeDays === 'all' || this.currentOptions.includeDays === 'next-month';\r\n\r\n        if (showNextMonthDays && this.currentOptions.includeNextMonthsFirstFullWeek) {\r\n            nextDays += 7;\r\n        }\r\n\r\n        for (let i = 1; i <= prevDays; i++) {\r\n            this.days.unshift(this.formatDay(subDays(start, i), showPrevMonthDays));\r\n        }\r\n\r\n        new Array(nextDays).fill(undefined)\r\n            .forEach((_, i) => this.days.push(this.formatDay(addDays(end, i + 1), showNextMonthDays)));\r\n\r\n\r\n        this.displayValue = this.formatDisplay();\r\n\r\n        if (this.range) {\r\n            this.barTitle = format(this.viewingDate, this.currentOptions.barTitleFormat, this.currentOptions.locale);\r\n        } else {\r\n            this.barTitle = this.currentOptions.useEmptyBarTitle ?\r\n                this.currentOptions.barTitleIfEmpty :\r\n                format(this.viewingDate, this.currentOptions.barTitleFormat, this.currentOptions.locale);\r\n        }\r\n    }\r\n\r\n    setDate(i: number): void {\r\n        const date = this.days[i].date;\r\n\r\n        const _range: any = this.range || {};\r\n\r\n        if (this.currentOptions.selectRange) {\r\n            if (!this.range || (!this.range.start && !this.range.end)) {\r\n                _range.start = date;\r\n            } else if (this.range.start && !this.range.end && isAfter(date, this.range.start)) {\r\n                _range.end = date;\r\n            } else {\r\n                _range.end = undefined;\r\n                _range.start = date;\r\n            }\r\n        } else {\r\n            _range.start = _range.end = date;\r\n        }\r\n\r\n        this.range = _range;\r\n\r\n        this.init();\r\n        this.onChangeCallback(this.getValueToEmit(this.range));\r\n\r\n        // Close if last value is selected\r\n        if (this.currentOptions.closeOnSelection && this.range.end) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    initDayNames(): void {\r\n        this.dayNames = [];\r\n        const start = this.currentOptions.firstCalendarDay;\r\n\r\n        for (let i = start; i <= 6 + start; i++) {\r\n            const date = setDay(new Date(), i);\r\n\r\n            this.dayNames.push(format(date, this.currentOptions.dayNamesFormat, this.currentOptions.locale));\r\n        }\r\n    }\r\n\r\n    // ############### Month ###############\r\n\r\n    setMonth(i: number): void {\r\n        this.viewingDate = setMonth(this.viewingDate, this.months[i].month);\r\n        this.init();\r\n        this.initMonths();\r\n        this.view = 'days';\r\n    }\r\n\r\n    initMonths(): void {\r\n        this.months = Array.from(new Array(12), (x, i) => setMonth(new Date(), i))\r\n            .map((date) => {\r\n                return { month: date.getMonth(), name: format(date, 'MMM'), isSelected: date.getMonth() === getMonth(this.viewingDate) };\r\n            });\r\n    }\r\n\r\n    nextMonth(): void {\r\n        this.viewingDate = addMonths(this.viewingDate, 1);\r\n        this.init();\r\n    }\r\n\r\n    prevMonth(): void {\r\n        this.viewingDate = subMonths(this.viewingDate, 1);\r\n        this.init();\r\n    }\r\n\r\n    // ############### Year ################\r\n\r\n\r\n    initYears(): void {\r\n        const range = this.currentOptions.maxYear - this.currentOptions.minYear;\r\n\r\n        /* tslint:disable */\r\n        // Ignore the rule due to the uniqeness of the arrow chain.\r\n        this.years = Array.from(new Array(range), (x, i) => { return { index: i, year: i + this.currentOptions.minYear }; }).map(({ index, year }) => {\r\n            return { index: index, year: year, isThisYear: year === getYear(this.viewingDate) };\r\n        });\r\n        /* tslint:enable */\r\n    }\r\n\r\n    scrollYears(): void {\r\n        setTimeout(() => {\r\n            const _heightOfYearElement = 40;\r\n            const _yearIndex = this.years.filter(item => item.isThisYear)[0];\r\n            const _scrollPosition = ((_yearIndex.index / 3) * _heightOfYearElement) - 30;\r\n            this.calendarYearsContainer.nativeElement.scroll(0, _scrollPosition);\r\n        }, 100);\r\n    }\r\n\r\n    setYear(i: number): void {\r\n        this.viewingDate = setYear(this.viewingDate, this.years[i].year);\r\n        this.init();\r\n        this.initYears();\r\n        this.view = 'months';\r\n    }\r\n\r\n    // ############### Container ################\r\n\r\n    toggleView(): void {\r\n        this.view = this.view === 'days' ? 'years' : 'days';\r\n        this.scrollYears();\r\n    }\r\n\r\n    toggle(): void {\r\n        this.isOpened = !this.isOpened;\r\n\r\n        if (!this.isOpened && this.view === 'years') {\r\n            this.toggleView();\r\n        }\r\n\r\n        if (this.isOpened && this.view === 'days') {\r\n            this.viewingDate = this.range && this.range.start ? this.range.start : this.viewingDate || new Date();\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    reset(): void {\r\n        this.range = {\r\n            start: new Date(),\r\n            end: new Date(),\r\n        };\r\n        this.init();\r\n    }\r\n\r\n    // ############### Misc ################\r\n\r\n    @HostListener('document:click', ['$event']) onBlur(e: MouseEvent) {\r\n\r\n        if (!this.isOpened || !this.currentOptions.closeOnClickOutside) {\r\n            return;\r\n        }\r\n\r\n        if (((e.target as any).parentElement && (e.target as any).parentElement.classList.contains('day-unit'))) {\r\n            return;\r\n        }\r\n\r\n        if (this.calendarContainerElement.nativeElement !== e.target &&\r\n            !this.calendarContainerElement.nativeElement.contains(e.target as any) &&\r\n            !(e.target as any).classList.contains('year-unit') &&\r\n            !(e.target as any).classList.contains('month-unit')\r\n        ) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.isOpened = false;\r\n\r\n        if (this.view === 'years') {\r\n            this.toggleView();\r\n        }\r\n    }\r\n}\r\n","import { Directive, OnInit, Input, ElementRef, HostListener, OnDestroy, Output, EventEmitter, AfterViewInit, forwardRef } from '@angular/core';\r\nimport { NgxDatePickerComponent } from './component/date-picker/ngx-date-picker.component';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { DateRange } from './models';\r\nimport { createDateRange } from './helpers';\r\n\r\n\r\n@Directive({\r\n    selector: '[ngxDatePicker]',\r\n    providers: [\r\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxDatePickerDirective), multi: true }\r\n    ]\r\n})\r\nexport class NgxDatePickerDirective implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\r\n\r\n    onChangeSubscription: Subscription;\r\n\r\n    @Input('ngxDatePicker') private datePickerInstance: NgxDatePickerComponent;\r\n\r\n    @Input() value: Date | DateRange;\r\n    @Output() valueChange: EventEmitter<Date | DateRange> = new EventEmitter();\r\n\r\n    onChange = (_value: Date | DateRange) => { };\r\n    onTouched = () => { };\r\n\r\n    constructor(public _el: ElementRef) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        if (!this.datePickerInstance) {\r\n            throw new Error('Instance of <ngx-date-picker> is required for directive.');\r\n        }\r\n\r\n        this.datePickerInstance.isOpened = false;\r\n        this.datePickerInstance.isInline = false;\r\n        // this.datePickerInstance.currentOptions.closeOnSelection = true;\r\n        this.datePickerInstance.currentOptions.closeOnClickOutside = false;\r\n\r\n        this.onChangeSubscription = this.datePickerInstance.valueChange.subscribe((value: Date | DateRange) => {\r\n            this._el.nativeElement.value = this.datePickerInstance.formatDisplay();\r\n            this.valueChange.emit(value);\r\n            this.onChange(value);\r\n        });\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        if (!this.value) {\r\n            return;\r\n        }\r\n\r\n        if (this.value instanceof Date) {\r\n            this.datePickerInstance.range = createDateRange(this.value, this.value);\r\n        } else {\r\n            this.datePickerInstance.range = this.value;\r\n        }\r\n\r\n        this.datePickerInstance.valueChange.emit(this.datePickerInstance.getValueToEmit(this.datePickerInstance.range));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.onChangeSubscription) {\r\n            this.onChangeSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n\r\n    // ############# ControlValueAccessor #############\r\n\r\n    writeValue(value: Date | DateRange): void {\r\n\r\n        if (value instanceof Date) {\r\n            this.datePickerInstance.range = createDateRange(value, value);\r\n        } else {\r\n            this.datePickerInstance.range = value;\r\n        }\r\n\r\n        this.datePickerInstance.valueChange.emit(this.datePickerInstance.getValueToEmit(this.datePickerInstance.range));\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.datePickerInstance.disabled = isDisabled;\r\n    }\r\n\r\n    // ############# Click Events #############\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(e: MouseEvent) {\r\n        this.datePickerInstance.toggle();\r\n    }\r\n\r\n    @HostListener('document:click', ['$event'])\r\n    onBlur(e: MouseEvent) {\r\n\r\n        if (!this.datePickerInstance.isOpened) {\r\n            return;\r\n        }\r\n\r\n        if (((e.target as any).parentElement && (e.target as any).parentElement.classList.contains('day-unit'))) {\r\n            return;\r\n        }\r\n\r\n        if (this._el.nativeElement !== e.target &&\r\n            !this.datePickerInstance.calendarContainerElement.nativeElement.contains(e.target as any) &&\r\n            !(e.target as any).classList.contains('year-unit') &&\r\n            !(e.target as any).classList.contains('month-unit')\r\n        ) {\r\n            this.datePickerInstance.close();\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxDatePickerComponent } from './component/date-picker/ngx-date-picker.component';\r\nimport { NgxDatePickerDirective } from './ngx-date-picker.directive';\r\n\r\n@NgModule({\r\n  declarations: [ NgxDatePickerComponent, NgxDatePickerDirective ],\r\n  imports: [ CommonModule, FormsModule ],\r\n  exports: [ NgxDatePickerComponent, NgxDatePickerDirective, CommonModule, FormsModule ]\r\n})\r\nexport class NgxDatePickerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {NgxDatePickerDirective as Éµa} from './ngx-date-picker.directive';"],"names":[],"mappings":"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"}